name: Build cunumeric on GH

on:
  workflow_call:
    inputs:
      build-target:
        required: true
        type: string
      runs-on:
        required: true
        type: string
      sha:
        required: true
        type: string

env:
  BASE_IMAGE: rapidsai/devcontainers:23.10-cpp-cuda11.8-mambaforge-ubuntu22.04
  IMAGE_TAG: "cunumeric-${{ inputs.build-target }}:${{ inputs.sha }}"
  USE_CUDA: ${{ (inputs.build-target == 'cpu' && 'OFF') || 'ON' }}

jobs:
  build:
    name: build-${{ inputs.build-target }}-sub-workflow

    permissions:
      id-token: write # This is required for configure-aws-credentials
      contents: read  # This is required for actions/checkout
      packages: write # This is required to push docker image to ghcr.io

    runs-on: ${{ inputs.runs-on }}

    steps:
      - name: Checkout cunumeric (= this repo)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
          path: cunumeric

      - name: Read legate.core repo info
        env:
          GH_TOKEN: "${{ secrets.PERSONAL_ACCESS_TOKEN || secrets.GITHUB_TOKEN }}"
        run: |
          legate_git_url=$(jq -r '.packages.legate_core.git_url' cunumeric/cmake/versions.json)
          legate_git_tag=$(jq -r '.packages.legate_core.git_tag' cunumeric/cmake/versions.json)
          legate_git_url=$(gh repo view $legate_git_url --json 'nameWithOwner' --jq '.nameWithOwner');
          echo "legate_git_url='$legate_git_url'";
          echo "legate_git_tag='$legate_git_tag'";
          cat<<EOF >> $GITHUB_ENV
          legate_git_url=$legate_git_url
          legate_git_tag=$legate_git_tag
          EOF

      - name: Checkout legate.core
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
          repository: ${{ env.legate_git_url }}
          ref: ${{ env.legate_git_tag }}
          path: legate

      - name: Read legate.core commit sha
        run: |
          legate_git_sha=$(git -C legate log -n1 --pretty=format:"%H")
          echo "legate_git_sha='$legate_git_sha'";
          cat<<EOF >> $GITHUB_ENV
          legate_git_sha=$legate_git_sha
          EOF

      - name: Download legate.core conda artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          path: .artifacts
          repo: ${{ env.legate_git_url }}
          commit: ${{ env.legate_git_sha }}
          workflow_conclusion: success
          workflow: "build-${{ inputs.build-target }}-sub-workflow"

      - if: github.repository_owner == 'nv-legate'
        name: Get AWS credentials for sccache bucket
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-2
          role-duration-seconds: 28800 # 8 hours
          role-to-assume: arn:aws:iam::279114543810:role/gha-oidc-nv-legate

      - name: Docker system prune
        run: |
          docker version
          docker system prune --all --force

      - name: Build docker image
        env:
          GH_TOKEN: "${{ secrets.PERSONAL_ACCESS_TOKEN || secrets.GITHUB_TOKEN }}"
        run: |
          docker build \
               --progress plain \
               --tag "$IMAGE_TAG" \
               --build-arg USE_CUDA="${USE_CUDA:-}" \
               --build-arg AWS_REGION="${AWS_REGION:-}" \
               --build-arg BASE_IMAGE="${BASE_IMAGE:-}" \
               --secret id=GH_TOKEN,src=<(cat <<< "${GH_TOKEN:-}") \
               --secret id=AWS_ACCESS_KEY_ID,src=<(cat <<< "${AWS_ACCESS_KEY_ID:-}") \
               --secret id=AWS_SESSION_TOKEN,src=<(cat <<< "${AWS_SESSION_TOKEN:-}") \
               --secret id=AWS_SECRET_ACCESS_KEY,src=<(cat <<< "${AWS_SECRET_ACCESS_KEY:-}") \
               -f cunumeric/continuous_integration/Dockerfile \
               .

      - name: Dump docker history of image before upload
        run: |
          docker history $IMAGE_TAG

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image
        run: |

          IMAGE_ID=ghcr.io/${{ github.repository_owner }}

          IMAGE_ID=$IMAGE_ID/$IMAGE_TAG

          # Change all uppercase to lowercase
          IMAGE_ID=${IMAGE_ID,,}

          docker tag $IMAGE_TAG $IMAGE_ID
          docker push $IMAGE_ID

      - name: Copy artifacts back to the host
        run: |
          mkdir -p out;
          docker run -v "$(pwd)/out:/out" --rm -t -u root $IMAGE_TAG \
          sh -c "cp -ar /home/coder/.artifacts /out/ && chown -R $(id -u):$(id -g) /out";
          mv out/.artifacts artifacts && rmdir out;

      - name: Display structure of workdir
        run: ls -R

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: "cunumeric-${{ inputs.build-target }}-${{ inputs.sha }}"
          path: artifacts
